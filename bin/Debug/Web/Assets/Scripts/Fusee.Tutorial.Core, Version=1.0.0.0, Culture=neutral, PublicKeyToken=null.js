/* Generated by JSIL v0.8.2 build 17617. See http://jsil.org/ for more information. */ 
'use strict';
var $asm09 = JSIL.DeclareAssembly("Fusee.Tutorial.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.Tutorial");
JSIL.DeclareNamespace("Fusee.Tutorial.Core");
/* class Fusee.Tutorial.Core.SceneOb */ 

(function SceneOb$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.Fusee.Math.Core.float3x3)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.Fusee.Math.Core.float4)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Math)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm14.System.Random)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Diagnostics.Debug)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm14.System.Double)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float3"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(JSIL.MethodSignature.Action($asm0D.TypeRef("System.Object")))) ();
  };


  function SceneOb__ctor () {
    this.Albedo = $S00().Construct(0.8, 0.8, 0.8);
    this.Pos = $T00().Zero.MemberwiseClone();
    this.Rot = $T00().Zero.MemberwiseClone();
    this.Rotbounds = $T01().Zero.MemberwiseClone();
    this.target = $T02().Zero.MemberwiseClone();
    this.speed = 0;
    this.Pivot = $T00().Zero.MemberwiseClone();
    this.Scale = $T00().One.MemberwiseClone();
    this.ModelScale = $T00().One.MemberwiseClone();
  }; 

  function SceneOb_adjustBoundsOfRotation () {
    this.Rot.x = +$T03().Max(this.Rot.x, (this.Rotbounds).get_M11());
    this.Rot.x = +$T03().Min(this.Rot.x, (this.Rotbounds).get_M12());
    this.Rot.y = +$T03().Max(this.Rot.y, (this.Rotbounds).get_M21());
    this.Rot.y = +$T03().Min(this.Rot.y, (this.Rotbounds).get_M22());
    this.Rot.z = +$T03().Max(this.Rot.z, (this.Rotbounds).get_M31());
    this.Rot.z = +$T03().Min(this.Rot.z, (this.Rotbounds).get_M32());
  }; 

  function SceneOb_hasReachedTarget () {
    return (+this.target.w <= 0);
  }; 

  function SceneOb_rndNewTarget (rnd) {
    $S01().CallStatic($T05(), "WriteLine", null, $T06().$Box(rnd.NextDouble()));
    this.target.x = Math.fround(+rnd.NextDouble() * 2) - 1;
    this.target.y = Math.fround(+rnd.NextDouble() * 2) - 1;
    this.target.z = Math.fround(+rnd.NextDouble() * 2) - 1;
    this.target.w = +(rnd.Next(50, 200));
    this.speed = +(rnd.Next(20, 100));
  }; 

  function SceneOb_update () {
    this.Rot.x = +this.Rot.x + +(((+this.target.x * +this.speed) / 1000));
    this.Rot.y = +this.Rot.y + +(((+this.target.y * +this.speed) / 1000));
    this.Rot.z = +this.Rot.z + +(((+this.target.z * +this.speed) / 1000));
    this.target.w = +this.target.w - 1;
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.SceneOb", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SceneOb__ctor
    );

    $.Method({Static:false, Public:true }, "adjustBoundsOfRotation", 
      JSIL.MethodSignature.Void, 
      SceneOb_adjustBoundsOfRotation
    );

    $.Method({Static:false, Public:true }, "hasReachedTarget", 
      JSIL.MethodSignature.Return($.Boolean), 
      SceneOb_hasReachedTarget
    );

    $.Method({Static:false, Public:true }, "rndNewTarget", 
      JSIL.MethodSignature.Action($asm14.TypeRef("System.Random")), 
      SceneOb_rndNewTarget
    );

    $.Method({Static:false, Public:true }, "update", 
      JSIL.MethodSignature.Void, 
      SceneOb_update
    );

    $.Field({Static:false, Public:true }, "ob_name", $.String);

    $.Field({Static:false, Public:true }, "Children", $asm14.TypeRef("System.Collections.Generic.List`1", [$.Type]));

    $.Field({Static:false, Public:true }, "Mesh", $asm04.TypeRef("Fusee.Engine.Core.Mesh"));

    $.Field({Static:false, Public:true }, "Albedo", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "Pos", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "Rot", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "Rotbounds", $asm06.TypeRef("Fusee.Math.Core.float3x3"));

    $.Field({Static:false, Public:true }, "target", $asm06.TypeRef("Fusee.Math.Core.float4"));

    $.Field({Static:false, Public:true }, "speed", $.Single);

    $.Field({Static:false, Public:true }, "Pivot", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "Scale", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "ModelScale", $asm06.TypeRef("Fusee.Math.Core.float3"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.Tutorial */ 

(function Tutorial$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm09.Fusee.Tutorial.Core.SceneOb))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Tutorial.Core.SceneOb)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm04.Fusee.Engine.Core.ShaderProgram)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.Fusee.Engine.Core.Mesh)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize(System.Array.Of($asm09.Fusee.Tutorial.Core.SceneOb))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm09.Fusee.Tutorial.Core.SceneOb))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm14.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Tutorial.Core.SceneOb))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.Fusee.Math.Core.float3x3)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm14.System.Random)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.Fusee.Math.Core.float4)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm14.System.Predicate$b1.Of($asm07.Fusee.Serialization.MeshComponent))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm07.Fusee.Serialization.SceneContainer)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm14.System.Collections.Generic.IEnumerable$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm07.Fusee.Serialization.MeshComponent)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm0B.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm06.Fusee.Math.Core.float4x4)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm03.Fusee.Engine.Common.ClearFlags)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm06.Fusee.Math.Core.float2)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm04.Fusee.Engine.Core.MouseDevice)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm04.Fusee.Engine.Core.TouchDevice)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm03.Fusee.Engine.Common.TouchPoints)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm14.TypeRef("System.String"), $asm09.TypeRef("Fusee.Tutorial.Core.SceneOb")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float3"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Tutorial.Core.SceneOb")]), [$asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Tutorial.Core.SceneOb")])]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float3x3"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Tutorial.Core.SceneOb")]), null))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.Tutorial.Core.SceneOb")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Random"), null))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float4"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.MeshComponent")]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm14.TypeRef("System.Predicate`1", ["!!0"])], ["TComponent"]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm06.TypeRef("Fusee.Math.Core.float4x4"), $asm06.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm06.TypeRef("Fusee.Math.Core.float3")]))) ();
  };


  function Tutorial__ctor () {
    this._humanModelChilds = $S00().Construct();
    $T01().prototype._ctor.call(this);
  }; 

  function Tutorial_createDictFromSceneObChilds (so, tempDict) {
    var $temp00;
    var flag = tempDict === null;
    if (flag) {
      tempDict = $S00().Construct();
    }
    var flag2 = so.Children !== null;
    if (flag2) {

      for (var a$0 = so.Children._items, i$0 = 0, l$0 = (so.Children._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        tempDict.Add(current.ob_name, current);
        this.createDictFromSceneObChilds(current, tempDict);
      }
    }
    return tempDict;
  }; 

  function Tutorial_Init () {
    var shaderProgram = (this.RenderCanvas$RC$value).CreateShader("\r\n            attribute vec3 fuVertex;\r\n            attribute vec3 fuNormal;\r\n            uniform mat4 FUSEE_MVP;\r\n            uniform mat4 FUSEE_MV;\r\n            uniform mat4 FUSEE_ITMV;\r\n\r\n            varying vec3 modelpos;\r\n            varying vec3 normal;\r\n            varying vec3 normal_model;\r\n\r\n            void main()\r\n            {\r\n                modelpos = fuVertex;\r\n                normal_model = fuNormal;\r\n                normal = normalize(mat3(FUSEE_MVP) * fuNormal);\r\n                gl_Position = FUSEE_MVP * vec4(fuVertex, 1.0);\r\n            }", "\r\n            #ifdef GL_ES\r\n                precision highp float;\r\n            #endif\r\n            varying vec3 modelpos;\r\n            varying vec3 normal;\r\n            varying vec3 normal_model;\r\n\r\n            uniform vec3 albedo;\r\n\r\n            void main()\r\n            {\r\n                float intensity = dot(normal, vec3(0, 0, -1));\r\n                gl_FragColor = vec4(intensity * albedo, 1);\r\n            }");
    (this.RenderCanvas$RC$value).SetShader(shaderProgram);
    this._albedoParam = (this.RenderCanvas$RC$value).GetShaderParam(shaderProgram, "albedo");
    var mesh = $thisType.LoadMesh("Cone.fus");
    var mesh2 = $thisType.LoadMesh("Cube.fus");
    var mesh3 = $thisType.LoadMesh("Cylinder.fus");
    var mesh4 = $thisType.LoadMesh("Pyramid.fus");
    var mesh5 = $thisType.LoadMesh("Sphere.fus");
    var sceneOb = new ($T02())();
    var expr_85 = JSIL.Array.New($T02(), 14);
    var expr_8C = new ($T02())();
    expr_8C.Mesh = mesh3;
    expr_8C.Pos = $S01().Construct(0, 3.05, 0);
    expr_8C.ModelScale = $S01().Construct(0.65, 0.45, 0.35);
    expr_8C.Albedo = $S01().Construct(0.8, 0.6, 0.7);
    expr_8C.ob_name = "upper_body";
    expr_85[0] = expr_8C;
    var expr_F4 = new ($T02())();
    expr_F4.Mesh = mesh2;
    expr_F4.Pos = $S01().Construct(0, 2.35, 0);
    expr_F4.ModelScale = $S01().Construct(0.4, 0.45, 0.2);
    expr_F4.Albedo = $S01().Construct(0.8, 0.6, 0.7);
    expr_F4.ob_name = "lower_body";
    expr_85[1] = expr_F4;
    var expr_15C = new ($T02())();
    expr_15C.Mesh = mesh4;
    expr_15C.Pos = $S01().Construct(0, 2.1, 0);
    expr_15C.ModelScale = $S01().Construct(0.7, 0.3, 0.35);
    expr_15C.Albedo = $S01().Construct(0.8, 0.6, 0.7);
    expr_15C.ob_name = "hipp";
    expr_85[2] = expr_15C;
    var expr_1C5 = new ($T02())();
    expr_1C5.Mesh = mesh2;
    expr_1C5.Pos = $S01().Construct(0, 1.7, 0);
    expr_1C5.ModelScale = $S01().Construct(0.7, 0.1, 0.35);
    expr_1C5.Albedo = $S01().Construct(0.8, 0.6, 0.7);
    expr_1C5.ob_name = "hipp2";
    expr_85[3] = expr_1C5;
    var expr_22D = new ($T02())();
    expr_22D.Mesh = mesh5;
    expr_22D.Pos = $S01().Construct(-0.3, 3.1, -0.35);
    expr_22D.ModelScale = $S01().Construct(0.2, 0.3, 0.2);
    expr_22D.Albedo = $S01().Construct(0.8, 0.6, 0.7);
    expr_22D.ob_name = "left_breast";
    expr_85[4] = expr_22D;
    var expr_296 = new ($T02())();
    expr_296.Mesh = mesh5;
    expr_296.Pos = $S01().Construct(0.3, 3.1, -0.35);
    expr_296.ModelScale = $S01().Construct(0.2, 0.3, 0.2);
    expr_296.Albedo = $S01().Construct(0.8, 0.6, 0.7);
    expr_296.ob_name = "right_breast";
    expr_85[5] = expr_296;
    var sceneOb2 = new ($T02())();
    var arg_4B6_0 = sceneOb2;
    var expr_309 = JSIL.Array.New($T02(), 2);
    var expr_310 = new ($T02())();
    expr_310.Mesh = mesh5;
    expr_310.Pos = $S01().Construct(0, -0.7, 0);
    expr_310.ModelScale = $S01().Construct(0.25, 0.25, 0.25);
    expr_310.Albedo = $S01().Construct(0.3, 0.4, 0.75);
    expr_310.ob_name = "left_knee";
    expr_309[0] = expr_310;
    var sceneOb3 = new ($T02())();
    var arg_3F0_0 = sceneOb3;
    var expr_383 = JSIL.Array.New($T02(), 1);
    var expr_38A = new ($T02())();
    expr_38A.Mesh = mesh2;
    expr_38A.Pos = $S01().Construct(0, -0.45, -0.2);
    expr_38A.ModelScale = $S01().Construct(0.2, 0.1, 0.4);
    expr_38A.Albedo = $S01().Construct(0.6, 0.3, 0.1);
    expr_38A.ob_name = "left_foot";
    expr_383[0] = expr_38A;
    arg_3F0_0.Children = $S02().Construct($T0B().$Cast(expr_383));
    sceneOb3.Mesh = mesh3;
    sceneOb3.Pos = $S01().Construct(0, -1.2, 0);
    sceneOb3.ModelScale = $S01().Construct(0.2, 0.45, 0.2);
    sceneOb3.Pivot = $S01().Construct(0, 0.5, 0);
    sceneOb3.Rotbounds = $S03().Construct(-2.5, 0.1, 0, 0, 0, 0, 0, 0, 0);
    sceneOb3.Albedo = $S01().Construct(0.3, 0.4, 0.75);
    sceneOb3.ob_name = "lower_left_leg";
    expr_309[1] = sceneOb3;
    arg_4B6_0.Children = $S02().Construct($T0B().$Cast(expr_309));
    sceneOb2.Mesh = mesh3;
    sceneOb2.Pos = $S01().Construct(-0.35, 1.1, 0);
    sceneOb2.ModelScale = $S01().Construct(0.3, 0.6, 0.25);
    sceneOb2.Pivot = $S01().Construct(0, 0.6, 0);
    sceneOb2.Rotbounds = $S03().Construct(-0.5, 1.5, 0, 0, 0, 0, -1, 0, 0);
    sceneOb2.Albedo = $S01().Construct(0.3, 0.4, 0.75);
    sceneOb2.ob_name = "upper_left_leg";
    expr_85[6] = sceneOb2;
    sceneOb2 = new ($T02())();
    var arg_735_0 = sceneOb2;
    var expr_588 = JSIL.Array.New($T02(), 2);
    var expr_58F = new ($T02())();
    expr_58F.Mesh = mesh5;
    expr_58F.Pos = $S01().Construct(0, -0.7, 0);
    expr_58F.ModelScale = $S01().Construct(0.25, 0.25, 0.25);
    expr_58F.Albedo = $S01().Construct(0.3, 0.4, 0.75);
    expr_58F.ob_name = "right_knee";
    expr_588[0] = expr_58F;
    sceneOb3 = new ($T02())();
    var arg_66F_0 = sceneOb3;
    var expr_602 = JSIL.Array.New($T02(), 1);
    var expr_609 = new ($T02())();
    expr_609.Mesh = mesh2;
    expr_609.Pos = $S01().Construct(0, -0.45, -0.2);
    expr_609.ModelScale = $S01().Construct(0.2, 0.1, 0.4);
    expr_609.Albedo = $S01().Construct(0.6, 0.3, 0.1);
    expr_609.ob_name = "right_foot";
    expr_602[0] = expr_609;
    arg_66F_0.Children = $S02().Construct($T0B().$Cast(expr_602));
    sceneOb3.Mesh = mesh3;
    sceneOb3.Pos = $S01().Construct(0, -1.2, 0);
    sceneOb3.ModelScale = $S01().Construct(0.2, 0.45, 0.2);
    sceneOb3.Pivot = $S01().Construct(0, 0.5, 0);
    sceneOb3.Rotbounds = $S03().Construct(-2.5, 0.1, 0, 0, 0, 0, 0, 0, 0);
    sceneOb3.Albedo = $S01().Construct(0.3, 0.4, 0.75);
    sceneOb3.ob_name = "lower_right_leg";
    expr_588[1] = sceneOb3;
    arg_735_0.Children = $S02().Construct($T0B().$Cast(expr_588));
    sceneOb2.Mesh = mesh3;
    sceneOb2.Pos = $S01().Construct(0.35, 1.1, 0);
    sceneOb2.ModelScale = $S01().Construct(0.3, 0.6, 0.25);
    sceneOb2.Pivot = $S01().Construct(0, 0.6, 0);
    sceneOb2.Rotbounds = $S03().Construct(-0.5, 1.5, 0, 0, 0, 0, 0, 1, 0);
    sceneOb2.Albedo = $S01().Construct(0.3, 0.4, 0.75);
    sceneOb2.ob_name = "upper_right_leg";
    expr_85[7] = sceneOb2;
    var expr_7FD = new ($T02())();
    expr_7FD.Mesh = mesh5;
    expr_7FD.Pos = $S01().Construct(-0.7, 3.3, 0);
    expr_7FD.ModelScale = $S01().Construct(0.3, 0.3, 0.3);
    expr_7FD.Albedo = $S01().Construct(0.8, 0.6, 0.7);
    expr_7FD.ob_name = "left_shoulder";
    expr_85[8] = expr_7FD;
    var expr_867 = new ($T02())();
    expr_867.Mesh = mesh5;
    expr_867.Pos = $S01().Construct(0.7, 3.3, 0);
    expr_867.ModelScale = $S01().Construct(0.3, 0.3, 0.3);
    expr_867.Albedo = $S01().Construct(0.8, 0.6, 0.7);
    expr_867.ob_name = "right_shoulder";
    expr_85[9] = expr_867;
    var expr_8D1 = new ($T02())();
    expr_8D1.Mesh = mesh;
    expr_8D1.Pos = $S01().Construct(0, 3.7, 0);
    expr_8D1.ModelScale = $S01().Construct(0.65, 0.2, 0.35);
    expr_8D1.Albedo = $S01().Construct(0.8, 0.7, 0.6);
    expr_8D1.ob_name = "neck";
    expr_85[10] = expr_8D1;
    sceneOb2 = new ($T02())();
    var arg_A6C_0 = sceneOb2;
    var expr_944 = JSIL.Array.New($T02(), 2);
    var expr_94B = new ($T02())();
    expr_94B.Mesh = mesh5;
    expr_94B.Pos = $S01().Construct(0, -0.4, 0);
    expr_94B.ModelScale = $S01().Construct(0.2, 0.2, 0.2);
    expr_94B.Albedo = $S01().Construct(0.8, 0.7, 0.6);
    expr_94B.ob_name = "left_elbow";
    expr_944[0] = expr_94B;
    var expr_9B4 = new ($T02())();
    expr_9B4.Mesh = mesh3;
    expr_9B4.Pos = $S01().Construct(0, -0.9, 0);
    expr_9B4.ModelScale = $S01().Construct(0.12, 0.4, 0.12);
    expr_9B4.Pivot = $S01().Construct(0, 0.5, 0);
    expr_9B4.Rotbounds = $S03().Construct(-0.5, 2.5, 0, 0, 0, 0, 0, 0, 0);
    expr_9B4.Albedo = $S01().Construct(0.8, 0.7, 0.6);
    expr_9B4.ob_name = "lower_left_arm";
    expr_944[1] = expr_9B4;
    arg_A6C_0.Children = $S02().Construct($T0B().$Cast(expr_944));
    sceneOb2.Mesh = mesh3;
    sceneOb2.Pos = $S01().Construct(-0.85, 2.8, 0);
    sceneOb2.ModelScale = $S01().Construct(0.15, 0.5, 0.15);
    sceneOb2.Pivot = $S01().Construct(0, 0.5, 0);
    sceneOb2.Rotbounds = $S03().Construct(-0.5, 2.5, 0, 0, 0, 0, -2.5, 0, 0);
    sceneOb2.Albedo = $S01().Construct(0.8, 0.7, 0.6);
    sceneOb2.ob_name = "upper_left_arm";
    expr_85[11] = sceneOb2;
    sceneOb2 = new ($T02())();
    var arg_C67_0 = sceneOb2;
    var expr_B3F = JSIL.Array.New($T02(), 2);
    var expr_B46 = new ($T02())();
    expr_B46.Mesh = mesh5;
    expr_B46.Pos = $S01().Construct(0, -0.4, 0);
    expr_B46.ModelScale = $S01().Construct(0.2, 0.2, 0.2);
    expr_B46.Albedo = $S01().Construct(0.8, 0.7, 0.6);
    expr_B46.ob_name = "right_elbow";
    expr_B3F[0] = expr_B46;
    var expr_BAF = new ($T02())();
    expr_BAF.Mesh = mesh3;
    expr_BAF.Pos = $S01().Construct(0, -0.9, 0);
    expr_BAF.ModelScale = $S01().Construct(0.12, 0.4, 0.12);
    expr_BAF.Pivot = $S01().Construct(0, 0.5, 0);
    expr_BAF.Rotbounds = $S03().Construct(-0.5, 2.5, 0, 0, 0, 0, 0, 0, 0);
    expr_BAF.Albedo = $S01().Construct(0.8, 0.7, 0.6);
    expr_BAF.ob_name = "lower_right_arm";
    expr_B3F[1] = expr_BAF;
    arg_C67_0.Children = $S02().Construct($T0B().$Cast(expr_B3F));
    sceneOb2.Mesh = mesh3;
    sceneOb2.Pos = $S01().Construct(0.85, 2.8, 0);
    sceneOb2.ModelScale = $S01().Construct(0.15, 0.5, 0.15);
    sceneOb2.Pivot = $S01().Construct(0, 0.5, 0);
    sceneOb2.Rotbounds = $S03().Construct(-0.5, 2.5, 0, 0, 0, 0, 0, 2.5, 0);
    sceneOb2.Albedo = $S01().Construct(0.8, 0.7, 0.6);
    sceneOb2.ob_name = "upper_right_arm";
    expr_85[12] = sceneOb2;
    sceneOb2 = new ($T02())();
    var arg_DA7_0 = sceneOb2;
    var expr_D3A = JSIL.Array.New($T02(), 1);
    var expr_D41 = new ($T02())();
    expr_D41.Mesh = mesh;
    expr_D41.Pos = $S01().Construct(0, 0.5, 0);
    expr_D41.ModelScale = $S01().Construct(1, 0.2, 1);
    expr_D41.Albedo = $S01().Construct(0.45, 0.4, 0.2);
    expr_D41.ob_name = "hat";
    expr_D3A[0] = expr_D41;
    arg_DA7_0.Children = $S02().Construct($T0B().$Cast(expr_D3A));
    sceneOb2.Mesh = mesh5;
    sceneOb2.Pos = $S01().Construct(0, 4.2, 0);
    sceneOb2.ModelScale = $S01().Construct(0.35, 0.5, 0.35);
    sceneOb2.Pivot = $S01().Construct(0, -0.4, 0);
    sceneOb2.Rotbounds = $S03().Construct(-1, 0.5, 0, 0, 0, 0, 0, 0, 0);
    sceneOb2.Albedo = $S01().Construct(0.8, 0.7, 0.6);
    sceneOb2.ob_name = "head";
    expr_85[13] = sceneOb2;
    sceneOb.Children = $S02().Construct($T0B().$Cast(expr_85));
    this._humanModel_root = sceneOb;
    this._humanModelChilds = this.createDictFromSceneObChilds(this._humanModel_root, null);
    this._humanModel_movableChilds = $S04().Construct();
    $S05().CallVirtual("Add", null, this._humanModel_movableChilds, (this._humanModelChilds).get_Item("head"));
    $S05().CallVirtual("Add", null, this._humanModel_movableChilds, (this._humanModelChilds).get_Item("lower_right_arm"));
    $S05().CallVirtual("Add", null, this._humanModel_movableChilds, (this._humanModelChilds).get_Item("lower_left_arm"));
    $S05().CallVirtual("Add", null, this._humanModel_movableChilds, (this._humanModelChilds).get_Item("upper_right_arm"));
    $S05().CallVirtual("Add", null, this._humanModel_movableChilds, (this._humanModelChilds).get_Item("upper_left_arm"));
    $S05().CallVirtual("Add", null, this._humanModel_movableChilds, (this._humanModelChilds).get_Item("lower_right_leg"));
    $S05().CallVirtual("Add", null, this._humanModel_movableChilds, (this._humanModelChilds).get_Item("lower_left_leg"));
    $S05().CallVirtual("Add", null, this._humanModel_movableChilds, (this._humanModelChilds).get_Item("upper_right_leg"));
    $S05().CallVirtual("Add", null, this._humanModel_movableChilds, (this._humanModelChilds).get_Item("upper_left_leg"));
    this.rnd = $S06().Construct();
    (this.RenderCanvas$RC$value.ClearColor = $S07().Construct(0.2, 0.2, 0.2, 1));
  }; 

  function Tutorial_LoadMesh (assetName) {
    var arg_2D_1 = null;
    var sceneContainer = $T12().Get$b1($T11())(assetName);
    var arg_2D_0 = sceneContainer.Children;
    if ((arg_2D_1 = $T14().$l$g9__13_0) === null) {
      arg_2D_1 = $T14().$l$g9__13_0 = $T10().New($T14().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc, "$lLoadMesh$gb__13_0", $S08(), false, false));
    }
    var meshComponent = $S09().CallStatic($T16(), "First$b1", [$asm07.Fusee.Serialization.MeshComponent], $S0A().CallStatic($T17(), "FindComponents$b1", [$asm07.Fusee.Serialization.MeshComponent], arg_2D_0, arg_2D_1));
    var expr_3D = new ($T07())();
    expr_3D.set_Vertices(meshComponent.Vertices);
    expr_3D.set_Normals(meshComponent.Normals);
    expr_3D.set_Triangles(meshComponent.Triangles);
    return expr_3D;
  }; 

  function Tutorial_ModelXForm (pos, rot, pivot) {
    return $S0B().CallStatic($T18(), "op_Multiply", null, 
      $S0B().CallStatic($T18(), "op_Multiply", null, 
        $S0B().CallStatic($T18(), "op_Multiply", null, 
          $S0B().CallStatic($T18(), "op_Multiply", null, 
            $T18().CreateTranslation($T09().op_Addition(pos.MemberwiseClone(), pivot).MemberwiseClone()).MemberwiseClone(), 
            $T18().CreateRotationY(rot.y).MemberwiseClone()
          ).MemberwiseClone(), 
          $T18().CreateRotationX(rot.x).MemberwiseClone()
        ).MemberwiseClone(), 
        $T18().CreateRotationZ(rot.z).MemberwiseClone()
      ).MemberwiseClone(), 
      $T18().CreateTranslation($T09().op_UnaryNegation(pivot.MemberwiseClone()).MemberwiseClone()).MemberwiseClone()
    );
  }; 

  function Tutorial_RenderAFrame () {
    var $temp00;
    (this.RenderCanvas$RC$value).Clear($T19().$Flags("Color", "Depth"));
    var float = $T1A().op_Addition(
      $T1C().get_Mouse().get_Velocity().MemberwiseClone(), 
      $T1C().get_Touch().GetVelocity($T1E().Touchpoint_0)
    );
    var flag = $T1C().get_Mouse().get_LeftButton() || 
    $T1C().get_Touch().GetTouchActive($T1E().Touchpoint_0);
    if (flag) {
      this._alpha = +this._alpha - (+float.x * 0.0001);
      this._beta = +this._beta - (+float.y * 0.0001);
    }

    for (var a$0 = this._humanModel_movableChilds._items, i$0 = 0, l$0 = (this._humanModel_movableChilds._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (current.hasReachedTarget()) {
        current.rndNewTarget(this.rnd);
      } else {
        current.update();
        current.adjustBoundsOfRotation();
      }
    }
    var aspect = +((+(this.get_Width()) / +(this.get_Height())));
    var modelView = $S0B().CallStatic($T18(), "op_Multiply", null, 
      $S0B().CallStatic($T18(), "op_Multiply", null, 
        $S0B().CallStatic($T18(), "op_Multiply", null, 
          $T18().CreateTranslation(0, 0, 8).MemberwiseClone(), 
          $T18().CreateRotationY(this._alpha).MemberwiseClone()
        ).MemberwiseClone(), 
        $T18().CreateRotationX(this._beta).MemberwiseClone()
      ).MemberwiseClone(), 
      $T18().CreateTranslation(0, -2, 0).MemberwiseClone()
    ).MemberwiseClone();
    (this.RenderCanvas$RC$value.Projection = $T18().CreatePerspectiveFieldOfView(0.785398, aspect, 0.01, 20).MemberwiseClone());
    this.RenderSceneOb(this._humanModel_root, modelView.MemberwiseClone());
    this.Present();
  }; 

  function Tutorial_RenderSceneOb (so, modelView) {
    var $temp00;
    modelView = $S0B().CallStatic($T18(), "op_Multiply", null, 
      $S0B().CallStatic($T18(), "op_Multiply", null, modelView.MemberwiseClone(), $thisType.ModelXForm(so.Pos.MemberwiseClone(), so.Rot.MemberwiseClone(), so.Pivot.MemberwiseClone()).MemberwiseClone()).MemberwiseClone(), 
      $S0C().CallStatic($T18(), "CreateScale", null, so.Scale.MemberwiseClone()).MemberwiseClone()
    ).MemberwiseClone();
    var flag = so.Mesh !== null;
    if (flag) {
      (this.RenderCanvas$RC$value.ModelView = $S0B().CallStatic($T18(), "op_Multiply", null, modelView.MemberwiseClone(), $S0C().CallStatic($T18(), "CreateScale", null, so.ModelScale.MemberwiseClone()).MemberwiseClone()).MemberwiseClone());
      (this.RenderCanvas$RC$value).SetShaderParam3f(this._albedoParam, so.Albedo.MemberwiseClone());
      (this.RenderCanvas$RC$value).Render(so.Mesh);
    }
    var flag2 = so.Children !== null;
    if (flag2) {

      for (var a$0 = so.Children._items, i$0 = 0, l$0 = (so.Children._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        this.RenderSceneOb(current, modelView.MemberwiseClone());
      }
    }
  }; 

  function Tutorial_Resize () {
    (this.RenderCanvas$RC$value).Viewport(
      0, 
      0, 
      this.get_Width(), 
      this.get_Height()
    );
    var aspect = +((+(this.get_Width()) / +(this.get_Height())));
    var projection = $T18().CreatePerspectiveFieldOfView(0.785398, aspect, 1, 20000);
    (this.RenderCanvas$RC$value.Projection = projection.MemberwiseClone());
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("Fusee.Engine.Core.RenderCanvas"), 
      Name: "Fusee.Tutorial.Core.Tutorial", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Tutorial__ctor
    );

    $.Method({Static:false, Public:false}, "createDictFromSceneObChilds", 
      new JSIL.MethodSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm09.TypeRef("Fusee.Tutorial.Core.SceneOb")]), [$asm09.TypeRef("Fusee.Tutorial.Core.SceneOb"), $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm09.TypeRef("Fusee.Tutorial.Core.SceneOb")])]), 
      Tutorial_createDictFromSceneObChilds
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Init", 
      JSIL.MethodSignature.Void, 
      Tutorial_Init
    );

    $.Method({Static:true , Public:false}, "LoadMesh", 
      new JSIL.MethodSignature($asm04.TypeRef("Fusee.Engine.Core.Mesh"), [$.String]), 
      Tutorial_LoadMesh
    );

    $.Method({Static:true , Public:false}, "ModelXForm", 
      new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [
          $asm06.TypeRef("Fusee.Math.Core.float3"), $asm06.TypeRef("Fusee.Math.Core.float3"), 
          $asm06.TypeRef("Fusee.Math.Core.float3")
        ]), 
      Tutorial_ModelXForm
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RenderAFrame", 
      JSIL.MethodSignature.Void, 
      Tutorial_RenderAFrame
    );

    $.Method({Static:false, Public:false}, "RenderSceneOb", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.Tutorial.Core.SceneOb"), $asm06.TypeRef("Fusee.Math.Core.float4x4")]), 
      Tutorial_RenderSceneOb
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Resize", 
      JSIL.MethodSignature.Void, 
      Tutorial_Resize
    );

    $.Field({Static:false, Public:false}, "_mesh", $asm04.TypeRef("Fusee.Engine.Core.Mesh"));

    $.Field({Static:false, Public:false}, "rnd", $asm14.TypeRef("System.Random"));

    $.Constant({Static:true , Public:false}, "_vertexShader", $.String, "\r\n            attribute vec3 fuVertex;\r\n            attribute vec3 fuNormal;\r\n            uniform mat4 FUSEE_MVP;\r\n            uniform mat4 FUSEE_MV;\r\n            uniform mat4 FUSEE_ITMV;\r\n\r\n            varying vec3 modelpos;\r\n            varying vec3 normal;\r\n            varying vec3 normal_model;\r\n\r\n            void main()\r\n            {\r\n                modelpos = fuVertex;\r\n                normal_model = fuNormal;\r\n                normal = normalize(mat3(FUSEE_MVP) * fuNormal);\r\n                gl_Position = FUSEE_MVP * vec4(fuVertex, 1.0);\r\n            }");

    $.Constant({Static:true , Public:false}, "_pixelShader", $.String, "\r\n            #ifdef GL_ES\r\n                precision highp float;\r\n            #endif\r\n            varying vec3 modelpos;\r\n            varying vec3 normal;\r\n            varying vec3 normal_model;\r\n\r\n            uniform vec3 albedo;\r\n\r\n            void main()\r\n            {\r\n                float intensity = dot(normal, vec3(0, 0, -1));\r\n                gl_FragColor = vec4(intensity * albedo, 1);\r\n            }");

    $.Field({Static:false, Public:false}, "_alpha", $.Single);

    $.Field({Static:false, Public:false}, "_beta", $.Single);

    $.Field({Static:false, Public:false}, "_albedoParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:false}, "_humanModel_root", $asm09.TypeRef("Fusee.Tutorial.Core.SceneOb"));

    $.Field({Static:false, Public:false}, "_humanModelChilds", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm09.TypeRef("Fusee.Tutorial.Core.SceneOb")]));

    $.Field({Static:false, Public:false}, "_humanModel_movableChilds", $asm14.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Tutorial.Core.SceneOb")]));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("Fusee.Engine.Common.FuseeApplicationAttribute"));

})();

/* class Fusee.Tutorial.Core.Tutorial+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.Fusee.Serialization.MeshComponent)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$lLoadMesh$gb__13_0 (c) {
    return true;
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.Tutorial+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$lLoadMesh$gb__13_0", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.MeshComponent")]), 
      $l$gc_$lLoadMesh$gb__13_0
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__13_0", $asm14.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.MeshComponent")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm14.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

