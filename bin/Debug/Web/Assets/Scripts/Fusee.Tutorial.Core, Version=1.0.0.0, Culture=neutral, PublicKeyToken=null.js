/* Generated by JSIL v0.8.2 build 17617. See http://jsil.org/ for more information. */ 
'use strict';
var $asm09 = JSIL.DeclareAssembly("Fusee.Tutorial.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.Tutorial");
JSIL.DeclareNamespace("Fusee.Tutorial.Core");
/* class Fusee.Tutorial.Core.MapGenerator */ 

(function MapGenerator$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Random)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.Fusee.Math.Core.float2)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.Fusee.Serialization.MatChannelContainer)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm07.Fusee.Serialization.SpecularChannelContainer)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm07.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm07.Fusee.Serialization.MeshComponent)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.Fusee.Math.Core.AABBf)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm14.System.UInt16)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm06.Fusee.Math.Core.float3))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm14.System.UInt16))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm09.Fusee.Tutorial.Core.MapTile)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm14.System.Object)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize(System.Array.Of($asm14.System.Object))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm09.Fusee.Tutorial.Core.verticeDirection, $asm14.System.Int32))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm09.Fusee.Tutorial.Core.verticeDirection)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm14.System.Convert)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm0F.System.Diagnostics.Debug)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm09.Fusee.Tutorial.Core.MapTile))) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize(System.Array.Of($asm06.Fusee.Math.Core.float3))) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm07.Fusee.Serialization.TransformComponent)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Random"), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float3"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm07.TypeRef("Fusee.Serialization.SceneComponentContainer")]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("Fusee.Math.Core.float3")]), null))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm14.TypeRef("System.UInt16")]), null))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm06.TypeRef("Fusee.Math.Core.float3")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm14.TypeRef("System.UInt16")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.UInt16"), [$asm14.TypeRef("System.Int32")]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(JSIL.MethodSignature.Action($asm0D.TypeRef("System.String")))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.UInt16"), [$asm14.TypeRef("System.Single")]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("Fusee.Serialization.SceneComponentContainer")]), null))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm14.TypeRef("System.String"), $asm09.TypeRef("Fusee.Tutorial.Core.MapTile")]), null))) ();
  };


  function MapGenerator_addMaterialComponent () {
    var materialComponent = new ($T02())();
    materialComponent.Diffuse = new ($T03())();
    materialComponent.Diffuse.Color = $S01().Construct(0, 0.7, 0.1);
    materialComponent.Diffuse.Mix = 1;
    materialComponent.Emissive = new ($T03())();
    materialComponent.Emissive.Color = $S01().Construct(1, 1, 0);
    materialComponent.Emissive.Mix = 1;
    materialComponent.Specular = new ($T05())();
    materialComponent.Specular.Color = $T04().One.MemberwiseClone();
    materialComponent.Specular.Intensity = 0.1;
    materialComponent.Specular.Mix = 1;
    materialComponent.Specular.Shininess = 1;
    $S02().CallVirtual("Add", null, $thisType.mapScene.Components, materialComponent);
  }; 

  function MapGenerator_addMeshComponent () {
    var meshComponent = new ($T07())();
    meshComponent.BoundingBox = new ($T08())($T04().Zero.MemberwiseClone(), $T04().Zero.MemberwiseClone());
    meshComponent.Normals = JSIL.Array.New($T04(), 0);
    meshComponent.Triangles = JSIL.Array.New($T09(), 0);
    meshComponent.Vertices = JSIL.Array.New($T04(), 0);
    var zero = $T04().Zero.MemberwiseClone();
    var list = $S03().Construct();
    var list2 = $S04().Construct();
    var num = 0;

    for (var num2 = 0; +num2 < +$thisType.mapSize.x; num2 = ((num2 + 1) | 0)) {

      for (var num3 = 0; +num3 < +$thisType.mapSize.y; num3 = ((num3 + 1) | 0)) {
        var mapTile = new ($T0D())(JSIL.ConcatString.apply(null, JSIL.Array.New($T0F(), ["Tile_", $T0C().$Box(num2), "-", $T0C().$Box(num3)])));
        (zero = zero.MemberwiseClone(), 
          $T04().prototype._ctor.call(zero, (+num2 * +$thisType.tileLength) + (+num2 * +$thisType.jointLength), 0, (+num3 * +$thisType.tileLength) + (+num3 * +$thisType.jointLength)));
        $S05().CallVirtual("Add", null, list, zero.MemberwiseClone());
        (mapTile.verticesIndex).Add($T12().UPPER_LEFT, Math.imul(num, 4));
        (zero = zero.MemberwiseClone(), 
          $T04().prototype._ctor.call(zero, (+(num2 + 1) * +$thisType.tileLength) + (+num2 * +$thisType.jointLength), 0, (+num3 * +$thisType.tileLength) + (+num3 * +$thisType.jointLength)));
        $S05().CallVirtual("Add", null, list, zero.MemberwiseClone());
        (mapTile.verticesIndex).Add($T12().UPPER_RIGHT, ((Math.imul(num, 4) + 1) | 0));
        (zero = zero.MemberwiseClone(), 
          $T04().prototype._ctor.call(zero, (+num2 * +$thisType.tileLength) + (+num2 * +$thisType.jointLength), 0, (+(num3 + 1) * +$thisType.tileLength) + (+num3 * +$thisType.jointLength)));
        $S05().CallVirtual("Add", null, list, zero.MemberwiseClone());
        (mapTile.verticesIndex).Add($T12().LOWER_LEFT, ((Math.imul(num, 4) + 2) | 0));
        (zero = zero.MemberwiseClone(), 
          $T04().prototype._ctor.call(zero, (+(num2 + 1) * +$thisType.tileLength) + (+num2 * +$thisType.jointLength), 0, (+(num3 + 1) * +$thisType.tileLength) + (+num3 * +$thisType.jointLength)));
        $S05().CallVirtual("Add", null, list, zero.MemberwiseClone());
        (mapTile.verticesIndex).Add($T12().LOWER_RIGHT, ((Math.imul(num, 4) + 3) | 0));
        $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, Math.imul(num, 4)));
        $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + 1) | 0)));
        $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + 2) | 0)));
        $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + 1) | 0)));
        $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + 3) | 0)));
        $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + 2) | 0)));
        $S08().CallStatic($T14(), "WriteLine", null, JSIL.ConcatString.apply(null, JSIL.Array.New($T0F(), ["Abfuck: ", $T15().$Box(((+$thisType.mapSize.y * +(num2 + 1)) - 1)), "TileCount: ", $T0C().$Box(num)])));
        var flag = (+num2 < +$thisType.mapSize.x) && 
        (+num3 < (+$thisType.mapSize.y - 1));
        if (flag) {
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + 3) | 0)));
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + 4) | 0)));
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + 2) | 0)));
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + 3) | 0)));
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + 5) | 0)));
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + 4) | 0)));
        }
        var flag2 = (+num2 < (+$thisType.mapSize.x - 1)) && 
        (+num3 < +$thisType.mapSize.y);
        if (flag2) {
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + 1) | 0)));
          $S06().CallVirtual("Add", null, list2, $S09().CallStatic($T13(), "ToUInt16", null, ((+num + +$thisType.mapSize.x) * 4) + 2));
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + 3) | 0)));
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + 1) | 0)));
          $S06().CallVirtual("Add", null, list2, $S09().CallStatic($T13(), "ToUInt16", null, ((+num + +$thisType.mapSize.x) * 4) + 0));
          $S06().CallVirtual("Add", null, list2, $S09().CallStatic($T13(), "ToUInt16", null, ((+num + +$thisType.mapSize.x) * 4) + 2));
        }
        $thisType.positionIndex.Add(JSIL.ConcatString($T0C().$Box(num2), ".", $T0C().$Box(num3)), mapTile);
        num = ((num + 1) | 0);
      }
    }
    var num4 = 0;

    for (var num5 = 0; +num5 < (+$thisType.mapSize.x - 1); num5 = ((num5 + 1) | 0)) {

      for (var num6 = 0; +num6 < +$thisType.mapSize.y; num6 = ((num6 + 1) | 0)) {
        (zero = zero.MemberwiseClone(), 
          $T04().prototype._ctor.call(zero, (+num5 * (+$thisType.tileLength + +$thisType.jointLength)) + (+$thisType.tileLength + (0.5 * +$thisType.jointLength)), 0, (+num6 * (+$thisType.tileLength + +$thisType.jointLength)) + (+$thisType.tileLength + (0.5 * +$thisType.jointLength))));
        $S05().CallVirtual("Add", null, list, zero.MemberwiseClone());
        var flag3 = (+num5 < +$thisType.mapSize.x) && 
        (+num6 < (+$thisType.mapSize.y - 1));
        if (flag3) {
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(4, num4) + 3) | 0)));
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + num4) | 0)));
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(4, ((num4 + 1) | 0)) + 1) | 0)));
          $S06().CallVirtual("Add", null, list2, $S09().CallStatic($T13(), "ToUInt16", null, (4 * (+num4 + +$thisType.mapSize.x)) + 2));
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + num4) | 0)));
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(4, num4) + 3) | 0)));
          $S06().CallVirtual("Add", null, list2, $S09().CallStatic($T13(), "ToUInt16", null, (4 * (+num4 + +$thisType.mapSize.x)) + 4));
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + num4) | 0)));
          $S06().CallVirtual("Add", null, list2, $S09().CallStatic($T13(), "ToUInt16", null, (4 * (+num4 + +$thisType.mapSize.x)) + 2));
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(4, ((num4 + 1) | 0)) + 1) | 0)));
          $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, ((Math.imul(num, 4) + num4) | 0)));
          $S06().CallVirtual("Add", null, list2, $S09().CallStatic($T13(), "ToUInt16", null, (4 * (+num4 + +$thisType.mapSize.x)) + 4));
        }
        num4 = ((num4 + 1) | 0);
      }
    }
    $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, 3));
    $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, Math.imul(num, 4)));
    $S06().CallVirtual("Add", null, list2, $S07().CallStatic($T13(), "ToUInt16", null, 5));
    meshComponent.Vertices = $T0A().prototype.ToArray.call(list);
    meshComponent.Triangles = $T0B().prototype.ToArray.call(list2);
    var list3 = $S03().Construct();
    var vertices = meshComponent.Vertices;

    for (var i = 0; i < (vertices.length | 0); i = ((i + 1) | 0)) {
      var float = vertices[i];
      $S05().CallVirtual("Add", null, list3, $S01().Construct(+($thisType.random.Next(-1, 2)), +($thisType.random.Next(1, 2)), +($thisType.random.Next(-1, 2))));
    }
    meshComponent.Normals = $T0A().prototype.ToArray.call(list3);
    $S02().CallVirtual("Add", null, $thisType.mapScene.Components, meshComponent);
  }; 

  function MapGenerator_addTransformCoponent () {
    var transformComponent = new ($T19())();
    transformComponent.Rotation = $T04().Zero.MemberwiseClone();
    transformComponent.Scale = $T04().One.MemberwiseClone();
    transformComponent.Translation = $T04().Zero.MemberwiseClone();
    $S02().CallVirtual("Add", null, $thisType.mapScene.Components, transformComponent);
  }; 

  function MapGenerator_generate () {
    $thisType.mapScene = new ($T1A())();
    $thisType.mapScene.Components = $S0A().Construct();
    $thisType.positionIndex = $S0B().Construct();
    $thisType.addTransformCoponent();
    $thisType.addMeshComponent();
    $thisType.addMaterialComponent();
    return $thisType.mapScene;
  }; 

  JSIL.MakeStaticClass("Fusee.Tutorial.Core.MapGenerator", false, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:true }, "addMaterialComponent", 
      JSIL.MethodSignature.Void, 
      MapGenerator_addMaterialComponent
    );

    $.Method({Static:true , Public:true }, "addMeshComponent", 
      JSIL.MethodSignature.Void, 
      MapGenerator_addMeshComponent
    );

    $.Method({Static:true , Public:true }, "addTransformCoponent", 
      JSIL.MethodSignature.Void, 
      MapGenerator_addTransformCoponent
    );

    $.Method({Static:true , Public:true }, "generate", 
      JSIL.MethodSignature.Return($asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")), 
      MapGenerator_generate
    );

    $.Field({Static:true , Public:false}, "random", $asm14.TypeRef("System.Random"));

    $.Field({Static:true , Public:true }, "positionIndex", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm09.TypeRef("Fusee.Tutorial.Core.MapTile")]));

    $.Field({Static:true , Public:true }, "mapSize", $asm06.TypeRef("Fusee.Math.Core.float2"));

    $.Field({Static:true , Public:true }, "tileLength", $.Single, 1);

    $.Field({Static:true , Public:true }, "jointLength", $.Single, 0.2);

    $.Field({Static:true , Public:true }, "mapScene", $asm07.TypeRef("Fusee.Serialization.SceneNodeContainer"));


    function MapGenerator__cctor () {
      $thisType.mapSize = new $asm06.Fusee.Math.Core.float2();
      $thisType.random = $S00().Construct();
      $thisType.mapSize = $T01().One.MemberwiseClone();
      $thisType.tileLength = 1;
      $thisType.jointLength = 0.2;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      MapGenerator__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.MapTile */ 

(function MapTile$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm07.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm09.Fusee.Tutorial.Core.verticeDirection, $asm14.System.Int32))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm09.Fusee.Tutorial.Core.MapTile))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm07.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm07.Fusee.Serialization.MatChannelContainer)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm07.Fusee.Serialization.SpecularChannelContainer)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm07.Fusee.Serialization.MeshComponent)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.Fusee.Math.Core.AABBf)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm14.System.UInt16)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm07.Fusee.Serialization.TransformComponent)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("Fusee.Serialization.SceneComponentContainer")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm09.TypeRef("Fusee.Tutorial.Core.verticeDirection"), $asm14.TypeRef("System.Int32")]), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Tutorial.Core.MapTile")]), null))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float3"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm07.TypeRef("Fusee.Serialization.SceneComponentContainer")]))) ();
  };


  function MapTile__ctor (name) {
    $T01().prototype._ctor.call(this);
    this.Components = $S00().Construct();
    this.Children = $S01().Construct();
    this.verticesIndex = $S02().Construct();
    this.neighbours = $S03().Construct();
    this.Name = name;
  }; 

  function MapTile_addMaterialComponent () {
    var materialComponent = new ($T06())();
    materialComponent.Diffuse = new ($T07())();
    materialComponent.Diffuse.Color = $S04().Construct(1, 0.5, 0.5);
    materialComponent.Diffuse.Mix = 1;
    materialComponent.Emissive = new ($T07())();
    materialComponent.Emissive.Color = $S04().Construct(1, 0.5, 0.5);
    materialComponent.Emissive.Mix = 1;
    materialComponent.Specular = new ($T09())();
    materialComponent.Specular.Color = $T08().One.MemberwiseClone();
    materialComponent.Specular.Intensity = 0.3;
    materialComponent.Specular.Mix = 1;
    materialComponent.Specular.Shininess = 100;
    $S05().CallVirtual("Add", null, this.Components, materialComponent);
  }; 

  function MapTile_addMeshComponent () {
    var meshComponent = new ($T0A())();
    meshComponent.BoundingBox = new ($T0B())($T08().Zero.MemberwiseClone(), $T08().Zero.MemberwiseClone());
    meshComponent.Vertices = JSIL.Array.New($T08(), [$S04().Construct(0, 0, 0), $S04().Construct(1, 0, 0), $S04().Construct(0, 0, 1), $S04().Construct(1, 0, 1)]);
    meshComponent.Triangles = JSIL.Array.New($T0C(), [0, 1, 2, 2, 1, 3]);
    meshComponent.Normals = JSIL.Array.New($T08(), [$S04().Construct(0, 1, 0), $S04().Construct(0, 1, 0), $S04().Construct(0, 1, 0), $S04().Construct(0, 1, 0)]);
    $S05().CallVirtual("Add", null, this.Components, meshComponent);
  }; 

  function MapTile_addTransformComponent () {
    var transformComponent = new ($T0D())();
    transformComponent.Rotation = $T08().Zero.MemberwiseClone();
    transformComponent.Scale = $T08().One.MemberwiseClone();
    transformComponent.Translation = this.pos.MemberwiseClone();
    $S05().CallVirtual("Add", null, this.Components, transformComponent);
  }; 

  JSIL.MakeType({
      BaseType: $asm07.TypeRef("Fusee.Serialization.SceneNodeContainer"), 
      Name: "Fusee.Tutorial.Core.MapTile", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      MapTile__ctor
    );

    $.Method({Static:false, Public:true }, "addMaterialComponent", 
      JSIL.MethodSignature.Void, 
      MapTile_addMaterialComponent
    );

    $.Method({Static:false, Public:true }, "addMeshComponent", 
      JSIL.MethodSignature.Void, 
      MapTile_addMeshComponent
    );

    $.Method({Static:false, Public:true }, "addTransformComponent", 
      JSIL.MethodSignature.Void, 
      MapTile_addTransformComponent
    );

    $.Field({Static:false, Public:true }, "pos", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "neighbours", $asm14.TypeRef("System.Collections.Generic.List`1", [$.Type]));

    $.Field({Static:false, Public:true }, "verticesIndex", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm09.TypeRef("Fusee.Tutorial.Core.verticeDirection"), $.Int32]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Fusee.Tutorial.Core.verticeDirection */ 

JSIL.MakeEnum(
  {
    FullName: "Fusee.Tutorial.Core.verticeDirection", 
    BaseType: $asm14.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    UPPER_RIGHT: 0, 
    UPPER_LEFT: 1, 
    LOWER_RIGHT: 2, 
    LOWER_LEFT: 3, 
  }
);

/* class Fusee.Tutorial.Core.Renderer */ 

(function Renderer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm07.Fusee.Serialization.MeshComponent, $asm04.Fusee.Engine.Core.Mesh))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.Fusee.Xene.CollapsingStateStack$b1.Of($asm06.Fusee.Math.Core.float4x4))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Fusee.Base.Common.ImageData)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize(System.Array.Of($asm04.Fusee.Engine.Core.EffectPassDeclaration))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.Fusee.Engine.Core.EffectPassDeclaration)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderStateSet)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm03.Fusee.Engine.Common.Cull)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize(System.Array.Of($asm04.Fusee.Engine.Core.EffectParameterDeclaration))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm04.Fusee.Engine.Core.EffectParameterDeclaration)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm04.Fusee.Engine.Core.ShaderEffect)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm14.System.Collections.Generic.IEnumerable$b1.Of($asm04.Fusee.Engine.Core.EffectParameterDeclaration))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.Fusee.Math.Core.float4x4)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm07.Fusee.Serialization.MeshComponent)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm04.Fusee.Engine.Core.Mesh)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm07.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm07.Fusee.Serialization.TransformComponent)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm06.TypeRef("Fusee.Math.Core.float4x4"), $asm06.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };


  function Renderer__ctor (rc) {
    this._meshes = $S00().Construct();
    this._model = new ($T02())(4);
    $T03().prototype._ctor.call(this);
    this.RC = rc;
    var imgData = $T05().Get$b1($T04())("Leaves.jpg").MemberwiseClone();
    this._leafTexture = (this.RC).CreateTexture(imgData.MemberwiseClone(), false);
    var expr_4B = JSIL.Array.New($T07(), 1);
    var effectPassDeclaration = new ($T07())();
    effectPassDeclaration.VS = $T05().Get$b1($T08())("VertexShader.vert");
    effectPassDeclaration.PS = $T05().Get$b1($T08())("PixelShader.frag");
    var expr_7E = new ($T09())();
    expr_7E.set_ZEnable(true);
    expr_7E.set_CullMode($T0A().Counterclockwise);
    effectPassDeclaration.StateSet = expr_7E;
    expr_4B[0] = effectPassDeclaration.MemberwiseClone();
    var expr_9F = JSIL.Array.New($T0C(), 7);
    var effectParameterDeclaration = new ($T0C())();
    effectParameterDeclaration.Name = "albedo";
    effectParameterDeclaration.Value = $T0D().One.MemberwiseClone();
    expr_9F[0] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0C())();
    effectParameterDeclaration.Name = "shininess";
    effectParameterDeclaration.Value = $T0E().$Box(1);
    expr_9F[1] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0C())();
    effectParameterDeclaration.Name = "specfactor";
    effectParameterDeclaration.Value = $T0E().$Box(1);
    expr_9F[2] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0C())();
    effectParameterDeclaration.Name = "speccolor";
    effectParameterDeclaration.Value = $T0D().Zero.MemberwiseClone();
    expr_9F[3] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0C())();
    effectParameterDeclaration.Name = "ambientcolor";
    effectParameterDeclaration.Value = $T0D().Zero.MemberwiseClone();
    expr_9F[4] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0C())();
    effectParameterDeclaration.Name = "texture";
    effectParameterDeclaration.Value = this._leafTexture;
    expr_9F[5] = effectParameterDeclaration.MemberwiseClone();
    effectParameterDeclaration = new ($T0C())();
    effectParameterDeclaration.Name = "texmix";
    effectParameterDeclaration.Value = $T0E().$Box(0);
    expr_9F[6] = effectParameterDeclaration.MemberwiseClone();
    this.ShaderEffect = new ($T0F())(expr_4B, $T10().$Cast(expr_9F));
    (this.ShaderEffect).AttachToContext(this.RC);
  }; 

  function Renderer_InitState () {
    (this._model).Clear();
    (this._model).set_Tos($T11().Identity.MemberwiseClone());
  }; 

  function Renderer_LookupMesh (mc) {
    var mesh = new JSIL.BoxedVariable(null);
    var flag = !(this._meshes).TryGetValue(mc, /* ref */ mesh);
    if (flag) {
      var expr_1C = new ($T13())();
      expr_1C.set_Vertices(mc.Vertices);
      expr_1C.set_Normals(mc.Normals);
      expr_1C.set_UVs(mc.UVs);
      expr_1C.set_Triangles(mc.Triangles);
      mesh.set(expr_1C);
      (this._meshes).set_Item(mc, mesh.get());
    }
    return mesh.get();
  }; 

  function Renderer_OnMaterial (material) {
    var hasDiffuse = material.get_HasDiffuse();
    if (hasDiffuse) {
      (this.ShaderEffect).SetEffectParam("albedo", material.Diffuse.Color.MemberwiseClone());
      var flag = (material.Diffuse.Texture == "Leaves.jpg");
      if (flag) {
        (this.ShaderEffect).SetEffectParam("texture", this._leafTexture);
        (this.ShaderEffect).SetEffectParam("texmix", $T0E().$Box(1));
      } else {
        (this.ShaderEffect).SetEffectParam("texmix", $T0E().$Box(0));
      }
    } else {
      (this.ShaderEffect).SetEffectParam("albedo", $T0D().Zero.MemberwiseClone());
    }
    var hasSpecular = material.get_HasSpecular();
    if (hasSpecular) {
      (this.ShaderEffect).SetEffectParam("shininess", material.Specular.Shininess);
      (this.ShaderEffect).SetEffectParam("specfactor", material.Specular.Intensity);
      (this.ShaderEffect).SetEffectParam("speccolor", material.Specular.Color.MemberwiseClone());
    } else {
      (this.ShaderEffect).SetEffectParam("shininess", $T16().$Box(0));
      (this.ShaderEffect).SetEffectParam("specfactor", $T16().$Box(0));
      (this.ShaderEffect).SetEffectParam("speccolor", $T0D().Zero.MemberwiseClone());
    }
    var hasEmissive = material.get_HasEmissive();
    if (hasEmissive) {
      (this.ShaderEffect).SetEffectParam("ambientcolor", material.Emissive.Color.MemberwiseClone());
    } else {
      (this.ShaderEffect).SetEffectParam("ambientcolor", $T0D().Zero.MemberwiseClone());
    }
  }; 

  function Renderer_OnMesh (mesh) {
    (this.ShaderEffect).RenderMesh(this.LookupMesh(mesh));
  }; 

  function Renderer_OnTransform (xform) {
    this._model.Tos = $S01().CallStatic($T11(), "op_Multiply", null, this._model.Tos.MemberwiseClone(), $T18().Matrix(xform).MemberwiseClone()).MemberwiseClone();
    (this.RC.ModelView = $S01().CallStatic($T11(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PopState () {
    (this._model).Pop();
    (this.RC.ModelView = $S01().CallStatic($T11(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PushState () {
    (this._model).Push();
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Xene.SceneVisitor"), 
      Name: "Fusee.Tutorial.Core.Renderer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm04.TypeRef("Fusee.Engine.Core.RenderContext")), 
      Renderer__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "InitState", 
      JSIL.MethodSignature.Void, 
      Renderer_InitState
    );

    $.Method({Static:false, Public:false}, "LookupMesh", 
      new JSIL.MethodSignature($asm04.TypeRef("Fusee.Engine.Core.Mesh"), [$asm07.TypeRef("Fusee.Serialization.MeshComponent")]), 
      Renderer_LookupMesh
    );

    $.Method({Static:false, Public:false}, "OnMaterial", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.MaterialComponent")), 
      Renderer_OnMaterial
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnMesh", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.MeshComponent")), 
      Renderer_OnMesh
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnTransform", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.TransformComponent")), 
      Renderer_OnTransform
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "PopState", 
      JSIL.MethodSignature.Void, 
      Renderer_PopState
    );

    $.Method({Static:false, Public:false, Virtual:true }, "PushState", 
      JSIL.MethodSignature.Void, 
      Renderer_PushState
    );

    $.Field({Static:false, Public:true }, "ShaderEffect", $asm04.TypeRef("Fusee.Engine.Core.ShaderEffect"));

    $.Field({Static:false, Public:true }, "RC", $asm04.TypeRef("Fusee.Engine.Core.RenderContext"));

    $.Field({Static:false, Public:false}, "_leafTexture", $asm03.TypeRef("Fusee.Engine.Common.ITexture"));

    $.Field({Static:false, Public:true }, "View", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_meshes", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]));

    $.Field({Static:false, Public:false}, "_model", $asm0B.TypeRef("Fusee.Xene.CollapsingStateStack`1", [$asm06.TypeRef("Fusee.Math.Core.float4x4")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.Tutorial */ 

(function Tutorial$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Random)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Predicate$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Assets.Bunker)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm14.System.Collections.Generic.IEnumerable$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0B.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm09.Fusee.Tutorial.Core.MapGenerator)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.Fusee.Math.Core.float2)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.Fusee.Math.Core.float4x4)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Renderer)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2_Enumerator.Of($asm14.System.String, $asm09.Fusee.Tutorial.Core.MapTile))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.String, $asm09.Fusee.Tutorial.Core.MapTile))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm14.System.Collections.Generic.KeyValuePair$b2.Of($asm14.System.String, $asm09.Fusee.Tutorial.Core.MapTile))) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.Fusee.Math.Core.float4)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm03.Fusee.Engine.Common.ClearFlags)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm14.System.Math)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm04.Fusee.Engine.Core.Time)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm04.Fusee.Engine.Core.TouchDevice)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm04.Fusee.Engine.Core.MouseDevice)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm03.Fusee.Engine.Common.TouchPoints)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm04.Fusee.Engine.Core.KeyboardDevice)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm06.Fusee.Math.Core.M)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm09.Fusee.Tutorial.Core.verticeDirection, $asm14.System.Int32))) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2_Enumerator.Of($asm09.Fusee.Tutorial.Core.verticeDirection, $asm14.System.Int32))) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm14.System.Collections.Generic.KeyValuePair$b2.Of($asm09.Fusee.Tutorial.Core.verticeDirection, $asm14.System.Int32))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Random"), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm14.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")])]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float3"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float2"), [$asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm14.TypeRef("System.Single")]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float4"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float2"), [$asm06.TypeRef("Fusee.Math.Core.float2"), $asm14.TypeRef("System.Single")]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Single"), [$asm14.TypeRef("System.Single")]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Single"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm06.TypeRef("Fusee.Math.Core.float4x4"), $asm06.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(JSIL.MethodSignature.Action($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")])))) ();
  };


  function Tutorial__ctor () {
    this.height = 0;
    this.random = $S00().Construct();
    $T01().prototype._ctor.call(this);
  }; 

  function Tutorial_Init () {
    var $hoisted00 = new ($T02())();
    var arg_3D_1 = null;
    $T04().load();
    this._scene = $T04().scene;
    var arg_3D_0 = this._scene.Children;
    if ((arg_3D_1 = $T06().$l$g9__23_0) === null) {
      arg_3D_1 = $T06().$l$g9__23_0 = $T03().New($T06().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc, "$lInit$gb__23_0", $S01(), false, false));
    }
    var expr_47 = $S02().CallStatic($T08(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S03().CallStatic($T09(), "FindNodes", null, arg_3D_0, arg_3D_1));
    this._bunkers = (
      (expr_47 !== null)
         ? $T0A().GetTransform(expr_47, 0)
         : null)
    ;
    this._bunkers.Scale = $S04().Construct(0.005, 0.005, 0.005);
    $T0B().tileLength = 1;
    $T0B().jointLength = 0.5;
    $T0B().mapSize = $S05().Construct(10, 10);
    $S06().CallVirtual("Add", null, this._scene.Children, $T0B().generate());
    this._sceneScale = $S07().CallStatic($T0E(), "CreateScale", null, 5).MemberwiseClone();
    this._renderer = new ($T0F())(this.RenderCanvas$RC$value);
    var enumerator = $T11().prototype.GetEnumerator.call($T0B().positionIndex);

    while ($T10().prototype.MoveNext.call(enumerator)) {
      var current = $T10().prototype.get_Current.call(enumerator);
      this.translateTile(
        current.get_Value().verticesIndex, 
        ($hoisted00._ctor(0, this.RandomTileHeight(0, 2), 0), 
          $hoisted00)
      );
    }
    (this.RenderCanvas$RC$value.ClearColor = $S08().Construct(1, 1, 1, 1));
  }; 

  function Tutorial_NormRot (rot) {

    for (; +rot > 3.14159274; rot -= 6.28318548) {
    }

    for (; +rot < -3.14159274; rot += 6.28318548) {
    }
    return rot;
  }; 

  function Tutorial_RandomTileHeight (minHeight, maxHeight) {
    return +((this.random).Next(minHeight, maxHeight));
  }; 

  function Tutorial_RenderAFrame () {
    (this.RenderCanvas$RC$value).Clear($T17().$Flags("Color", "Depth"));
    var num = Math.fround($T18().Exp(-0.8 * +$T19().get_DeltaTime()));
    var twoPoint = $T1C().get_Touch().get_TwoPoint();
    if (twoPoint) {
      if (!this._twoTouchRepeated) {
        this._twoTouchRepeated = true;
        $thisType._angleRollInit = +$T1C().get_Touch().get_TwoPointAngle() - +$thisType._angleRoll;
        $thisType._offsetInit = $T0C().op_Subtraction($T1C().get_Touch().get_TwoPointMidPoint().MemberwiseClone(), $thisType._offset);
      }
      $thisType._zoomVel = +$T1C().get_Touch().get_TwoPointDistanceVel() * -0.01;
      $thisType._angleRoll = +$T1C().get_Touch().get_TwoPointAngle() - +$thisType._angleRollInit;
      $thisType._offset = $T0C().op_Subtraction($T1C().get_Touch().get_TwoPointMidPoint().MemberwiseClone(), $thisType._offsetInit);
    } else {
      this._twoTouchRepeated = false;
      $thisType._zoomVel = +$T1C().get_Mouse().get_WheelVel() * -0.5;
      $thisType._angleRoll = +$thisType._angleRoll * (num * 0.8);
      $thisType._offset = $S09().CallStatic($T0C(), "op_Multiply", null, $thisType._offset.MemberwiseClone(), num * 0.8);
    }
    var leftButton = $T1C().get_Mouse().get_LeftButton();
    if (leftButton) {
      this._keys = false;
      $thisType._angleVelHorz = (-7 * +$T1C().get_Mouse().get_XVel()) * 2E-06;
      $thisType._angleVelVert = (-7 * +$T1C().get_Mouse().get_YVel()) * 2E-06;
    } else {
      var flag2 = $T1C().get_Touch().GetTouchActive($T1E().Touchpoint_0) && 
      !$T1C().get_Touch().get_TwoPoint();
      if (flag2) {
        this._keys = false;
        var velocity = $T1C().get_Touch().GetVelocity($T1E().Touchpoint_0);
        $thisType._angleVelHorz = (-7 * +velocity.x) * 2E-06;
        $thisType._angleVelVert = (-7 * +velocity.y) * 2E-06;
      } else {
        var keys = this._keys;
        if (keys) {
          $thisType._angleVelHorz = (-7 * +$T1C().get_Keyboard().get_LeftRightAxis()) * 0.002;
          $thisType._angleVelVert = (-7 * +$T1C().get_Keyboard().get_UpDownAxis()) * 0.002;
        } else {
          $thisType._angleVelHorz = +$thisType._angleVelHorz * num;
          $thisType._angleVelVert = +$thisType._angleVelVert * num;
        }
      }
    }
    var rot = 0;
    rot = +$thisType.NormRot(rot);
    $thisType._zoom = +$thisType._zoom + +$thisType._zoomVel;
    if (+$thisType._zoom < 80) {
      $thisType._zoom = 80;
    }
    if (+$thisType._zoom > 2000) {
      $thisType._zoom = 2000;
    }
    $thisType._angleHorz = +$thisType._angleHorz + +$thisType._angleVelHorz;
    $thisType._angleHorz = +$S0A().CallStatic($T20(), "MinAngle", null, $thisType._angleHorz);
    $thisType._angleVert = +$thisType._angleVert + +$thisType._angleVelVert;
    $thisType._angleVert = +$S0B().CallStatic($T20(), "Clamp", null, $thisType._angleVert, -1.57079637, 1.57079637);
    $thisType._angleRoll = +$S0A().CallStatic($T20(), "MinAngle", null, $thisType._angleRoll);
    var right = $S0C().CallStatic($T0E(), "op_Multiply", null, 
      $S0C().CallStatic($T0E(), "op_Multiply", null, 
        $T0E().CreateRotationZ($thisType._angleRoll).MemberwiseClone(), 
        $T0E().CreateRotationX($thisType._angleVert).MemberwiseClone()
      ).MemberwiseClone(), 
      $T0E().CreateRotationY($thisType._angleHorz).MemberwiseClone()
    ).MemberwiseClone();
    var left = $T0E().LookAt(
      0, 
      10, 
      -$thisType._zoom, 
      0, 
      0, 
      0, 
      0, 
      1, 
      0
    );
    this._renderer.View = $S0C().CallStatic($T0E(), "op_Multiply", null, $S0C().CallStatic($T0E(), "op_Multiply", null, left.MemberwiseClone(), right.MemberwiseClone()).MemberwiseClone(), this._sceneScale.MemberwiseClone()).MemberwiseClone();
    var left2 = $T0E().CreateTranslation(
      +(((2 * +$thisType._offset.x) / +(this.get_Width()))), 
      +(((-2 * +$thisType._offset.y) / +(this.get_Height()))), 
      0
    ).MemberwiseClone();
    (this.RenderCanvas$RC$value.Projection = $S0C().CallStatic($T0E(), "op_Multiply", null, left2.MemberwiseClone(), this._projection.MemberwiseClone()).MemberwiseClone());
    $S0D().CallVirtual("Traverse", null, this._renderer, this._scene.Children);
    this.Present();
  }; 

  function Tutorial_Resize () {
    (this.RenderCanvas$RC$value).Viewport(
      0, 
      0, 
      this.get_Width(), 
      this.get_Height()
    );
    var aspect = +((+(this.get_Width()) / +(this.get_Height())));
    this._projection = $T0E().CreatePerspectiveFieldOfView(0.7853982, aspect, 1, 20000).MemberwiseClone();
  }; 

  function Tutorial_translateTile (vertInd, translation) {
    var enumerator = $T22().prototype.GetEnumerator.call(vertInd);

    while ($T23().prototype.MoveNext.call(enumerator)) {
      var current = $T23().prototype.get_Current.call(enumerator);
      var float = $T0A().GetMesh($T0B().mapScene, 0).Vertices[current.get_Value()].MemberwiseClone();
      (float = float.MemberwiseClone(), 
        $T02().prototype._ctor.call(float, +float.x + +translation.x, +float.y + +translation.y, +float.z + +translation.z));
      $T0A().GetMesh($T0B().mapScene, 0).Vertices[current.Value] = float.MemberwiseClone();
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("Fusee.Engine.Core.RenderCanvas"), 
      Name: "Fusee.Tutorial.Core.Tutorial", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Tutorial__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Init", 
      JSIL.MethodSignature.Void, 
      Tutorial_Init
    );

    $.Method({Static:true , Public:true }, "NormRot", 
      new JSIL.MethodSignature($.Single, [$.Single]), 
      Tutorial_NormRot
    );

    $.Method({Static:false, Public:true }, "RandomTileHeight", 
      new JSIL.MethodSignature($.Single, [$.Int32, $.Int32]), 
      Tutorial_RandomTileHeight
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RenderAFrame", 
      JSIL.MethodSignature.Void, 
      Tutorial_RenderAFrame
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Resize", 
      JSIL.MethodSignature.Void, 
      Tutorial_Resize
    );

    $.Method({Static:false, Public:false}, "translateTile", 
      new JSIL.MethodSignature(null, [$asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm09.TypeRef("Fusee.Tutorial.Core.verticeDirection"), $.Int32]), $asm06.TypeRef("Fusee.Math.Core.float3")]), 
      Tutorial_translateTile
    );

    $.Field({Static:true , Public:false}, "_angleHorz", $.Single, 1.04719758);

    $.Field({Static:true , Public:false}, "_angleVert", $.Single, -0.2617994);

    $.Field({Static:true , Public:false}, "_angleVelHorz", $.Single);

    $.Field({Static:true , Public:false}, "_angleVelVert", $.Single);

    $.Field({Static:true , Public:false}, "_angleRoll", $.Single);

    $.Field({Static:true , Public:false}, "_angleRollInit", $.Single);

    $.Field({Static:true , Public:false}, "_zoomVel", $.Single);

    $.Field({Static:true , Public:false}, "_zoom", $.Single);

    $.Field({Static:true , Public:false}, "_offset", $asm06.TypeRef("Fusee.Math.Core.float2"));

    $.Field({Static:true , Public:false}, "_offsetInit", $asm06.TypeRef("Fusee.Math.Core.float2"));

    $.Constant({Static:true , Public:false}, "RotationSpeed", $.Single, 7);

    $.Constant({Static:true , Public:false}, "Damping", $.Single, 0.8);

    $.Field({Static:false, Public:false}, "_scene", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_sceneCenter", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_sceneScale", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_projection", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_twoTouchRepeated", $.Boolean);

    $.Field({Static:false, Public:false}, "_keys", $.Boolean);

    $.Field({Static:false, Public:false}, "_bunkers", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_bunkers2", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_renderer", $asm09.TypeRef("Fusee.Tutorial.Core.Renderer"));

    $.Field({Static:false, Public:false}, "height", $.Single);

    $.Field({Static:false, Public:false}, "random", $asm14.TypeRef("System.Random"));


    function Tutorial__cctor () {
      $thisType._offset = new $asm06.Fusee.Math.Core.float2();
      $thisType._offsetInit = new $asm06.Fusee.Math.Core.float2();
      $thisType._angleHorz = 1.04719758;
      $thisType._angleVert = -0.2617994;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Tutorial__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("Fusee.Engine.Common.FuseeApplicationAttribute"));

})();

/* class Fusee.Tutorial.Core.Tutorial+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.String)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$lInit$gb__23_0 (c) {
    return c.Name == "Bunker";
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.Tutorial+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__23_0", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__23_0
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__23_0", $asm14.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm14.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Fusee.Tutorial.Core.Assets");
/* class Fusee.Tutorial.Core.Assets.Bunker */ 

(function Bunker$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Predicate$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.Collections.Generic.IEnumerable$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Assets.Bunker_$l$gc)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm07.Fusee.Serialization.SceneContainer)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm14.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")])]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };


  function Bunker__ctor () {
    var arg_32_1 = null, arg_78_1 = null, arg_BE_1 = null;
    var arg_32_0 = $thisType.scene.Children;
    if ((arg_32_1 = $T02().$l$g9__4_0) === null) {
      arg_32_1 = $T02().$l$g9__4_0 = $T00().New($T02().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Assets.Bunker_$l$gc, "$l_ctor$gb__4_0", $S00(), false, false));
    }
    var expr_3C = $S01().CallStatic($T04(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S02().CallStatic($T05(), "FindNodes", null, arg_32_0, arg_32_1));
    this.bunkerBase = (
      (expr_3C !== null)
         ? $T06().GetTransform(expr_3C, 0)
         : null)
    ;
    var arg_78_0 = $thisType.scene.Children;
    if ((arg_78_1 = $T02().$l$g9__4_1) === null) {
      arg_78_1 = $T02().$l$g9__4_1 = $T00().New($T02().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Assets.Bunker_$l$gc, "$l_ctor$gb__4_1", $S03(), false, false));
    }
    var expr_82 = $S01().CallStatic($T04(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S02().CallStatic($T05(), "FindNodes", null, arg_78_0, arg_78_1));
    this.bunkerPlatform = (
      (expr_82 !== null)
         ? $T06().GetTransform(expr_82, 0)
         : null)
    ;
    var arg_BE_0 = $thisType.scene.Children;
    if ((arg_BE_1 = $T02().$l$g9__4_2) === null) {
      arg_BE_1 = $T02().$l$g9__4_2 = $T00().New($T02().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Assets.Bunker_$l$gc, "$l_ctor$gb__4_2", $S04(), false, false));
    }
    var expr_C8 = $S01().CallStatic($T04(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S02().CallStatic($T05(), "FindNodes", null, arg_BE_0, arg_BE_1));
    this.bunkerCannon = (
      (expr_C8 !== null)
         ? $T06().GetTransform(expr_C8, 0)
         : null)
    ;
  }; 

  function Bunker_load () {
    $thisType.scene = $T08().Get$b1($T07())("Bunker_v5.fus");
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.Assets.Bunker", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Bunker__ctor
    );

    $.Method({Static:true , Public:true }, "load", 
      JSIL.MethodSignature.Void, 
      Bunker_load
    );

    $.Field({Static:true , Public:true }, "scene", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:true }, "bunkerBase", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:true }, "bunkerPlatform", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:true }, "bunkerCannon", $asm07.TypeRef("Fusee.Serialization.TransformComponent"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.Assets.Bunker+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.String)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$l_ctor$gb__4_0 (c) {
    return c.Name == "Bunker";
  }; 

  function $l$gc_$l_ctor$gb__4_1 (c) {
    return c.Name == "Turn";
  }; 

  function $l$gc_$l_ctor$gb__4_2 (c) {
    return c.Name == "CannonRohr";
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.Assets.Bunker+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__4_0", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$l_ctor$gb__4_0
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__4_1", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$l_ctor$gb__4_1
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__4_2", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$l_ctor$gb__4_2
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__4_0", $asm14.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__4_1", $asm14.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__4_2", $asm14.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm14.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

